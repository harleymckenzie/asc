name: Bump Beta Version

on:
  push:
    branches:
      - beta
  workflow_dispatch:

permissions:
  contents: write

jobs:
  betabump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTH_TOKEN }}
          fetch-depth: 0

      - name: Compare app version to tag version
        id: get_latest_version
        run: |
          APP_VERSION=$(grep -oP 'Version = "\K[^"]+' cmd/root.go)
          
          # Check if the app version is already a beta version
          if [[ "$APP_VERSION" == *-beta.* ]]; then
            echo "App version is already a beta: $APP_VERSION"
            BETA_VERSION="$APP_VERSION"
          else
            # Convert stable version to beta.1
            BETA_VERSION="${APP_VERSION}-beta.1"
            echo "Converting stable version $APP_VERSION to beta: $BETA_VERSION"
          fi
          
          echo "App version: $APP_VERSION"
          echo "Beta version: $BETA_VERSION"
          
          # Check if this exact beta tag already exists
          if git rev-parse -q --verify "refs/tags/v${BETA_VERSION}" >/dev/null; then
            echo "Tag v${BETA_VERSION} already exists. Nothing to do."
            exit 0
          fi
          
          # If it's a new beta (not already a beta), update cmd/root.go
          if [[ "$APP_VERSION" != *-beta.* ]]; then
            echo "Updating cmd/root.go to version $BETA_VERSION"
            sed -i "s/Version = \"[^\"]*\"/Version = \"$BETA_VERSION\"/" cmd/root.go
            
            # Verify the change
            UPDATED_VERSION=$(grep -oP 'Version = "\K[^"]+' cmd/root.go)
            if [ "$UPDATED_VERSION" != "$BETA_VERSION" ]; then
              echo "Error: Failed to update version in cmd/root.go"
              exit 1
            fi
          fi
          
          echo "NEW_BETA_VERSION=$BETA_VERSION" >> $GITHUB_ENV

      - name: Commit version update
        if: ${{ env.NEW_BETA_VERSION }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add cmd/root.go
          git commit -m "chore: bump version to ${{ env.NEW_BETA_VERSION }}"
          git push origin HEAD

      - name: Create beta tag
        if: ${{ env.NEW_BETA_VERSION }}
        run: |
          NEW_TAG="v${{ env.NEW_BETA_VERSION }}"
          echo "Creating beta tag: $NEW_TAG"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a $NEW_TAG -m "Beta release $NEW_TAG"
          git push origin $NEW_TAG
          
          echo "âœ… Beta release $NEW_TAG created successfully!"
          echo "This will trigger the GoReleaser workflow to build and publish the beta release."
